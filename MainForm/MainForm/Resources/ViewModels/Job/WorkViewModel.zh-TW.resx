<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Actually_completion_date" xml:space="preserve">
    <value>實際完工日期</value>
  </data>
  <data name="Actually_completion_quantity" xml:space="preserve">
    <value>實際完工數量</value>
  </data>
  <data name="Actually_completion_quantity_uom" xml:space="preserve">
    <value>實際完工數量單位</value>
  </data>
  <data name="Actually_defective_quantity" xml:space="preserve">
    <value>不良品數量</value>
  </data>
  <data name="Actually_defective_quantity_uom" xml:space="preserve">
    <value>不良品數量單位</value>
  </data>
  <data name="Actually_start_date" xml:space="preserve">
    <value>實際開工日期</value>
  </data>
  <data name="Customer_name" xml:space="preserve">
    <value>客戶名稱</value>
  </data>
  <data name="Customer_no" xml:space="preserve">
    <value>客戶編號</value>
  </data>
  <data name="Customer_order_id" xml:space="preserve">
    <value>客戶訂單識別碼</value>
  </data>
  <data name="Customer_order_no" xml:space="preserve">
    <value>客戶訂單號</value>
  </data>
  <data name="Customer_order_quantity" xml:space="preserve">
    <value>客戶訂單數量</value>
  </data>
  <data name="Customer_order_quantity_uom" xml:space="preserve">
    <value>客戶訂單數量單位</value>
  </data>
  <data name="Customer_shipping_address" xml:space="preserve">
    <value>客戶出貨地址</value>
  </data>
  <data name="Customer_shipping_date" xml:space="preserve">
    <value>客戶預訂出貨日</value>
  </data>
  <data name="Employee_id" xml:space="preserve">
    <value>製單人員</value>
  </data>
  <data name="Factory_id" xml:space="preserve">
    <value>工廠識別碼</value>
  </data>
  <data name="Input_of_inventory_quantity" xml:space="preserve">
    <value>入庫數量</value>
  </data>
  <data name="Input_of_inventory_quantity_uom" xml:space="preserve">
    <value>入庫數量單位</value>
  </data>
  <data name="Item_description" xml:space="preserve">
    <value>貨品說明</value>
  </data>
  <data name="Item_id" xml:space="preserve">
    <value>物件識別碼</value>
  </data>
  <data name="Item_name" xml:space="preserve">
    <value>貨品名稱</value>
  </data>
  <data name="Item_no" xml:space="preserve">
    <value>貨品編號</value>
  </data>
  <data name="Item_type" xml:space="preserve">
    <value>物料種類</value>
  </data>
  <data name="Job_barcode" xml:space="preserve">
    <value>Barcode</value>
  </data>
  <data name="Job_closed_date" xml:space="preserve">
    <value>結案日期</value>
  </data>
  <data name="Job_date" xml:space="preserve">
    <value>流程單日期</value>
  </data>
  <data name="Job_description" xml:space="preserve">
    <value>流程單備註</value>
  </data>
  <data name="Job_id" xml:space="preserve">
    <value>工單識別碼</value>
  </data>
  <data name="Job_no" xml:space="preserve">
    <value>流程單號</value>
  </data>
  <data name="Job_qrcode" xml:space="preserve">
    <value>QR Code</value>
  </data>
  <data name="Job_released_date" xml:space="preserve">
    <value>簽發日期</value>
  </data>
  <data name="Job_source_id" xml:space="preserve">
    <value>來源識別碼</value>
  </data>
  <data name="Job_source_no" xml:space="preserve">
    <value>來源編號</value>
  </data>
  <data name="Job_source_type" xml:space="preserve">
    <value>來源類別</value>
  </data>
  <data name="Job_status" xml:space="preserve">
    <value>流程單狀態</value>
  </data>
  <data name="Reserved_field01" xml:space="preserve">
    <value>採購單號</value>
  </data>
  <data name="Reserved_field02" xml:space="preserve">
    <value>打字</value>
  </data>
  <data name="Scheduled_completion_date" xml:space="preserve">
    <value>預定完工日期</value>
  </data>
  <data name="Scheduled_completion_quantity" xml:space="preserve">
    <value>預定完工數量</value>
  </data>
  <data name="Scheduled_completion_quantity_uom" xml:space="preserve">
    <value>預定完工數量單位</value>
  </data>
  <data name="Scheduled_start_date" xml:space="preserve">
    <value>預定開工日期</value>
  </data>
</root>